{"version":3,"file":"HandlerMetadata.js","sourceRoot":"","sources":["../../../src/mvc/models/HandlerMetadata.ts"],"names":[],"mappings":"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","sourcesContent":["import {nameOf, Type} from \"@tsed/core\";\nimport {ProviderScope} from \"@tsed/di\";\nimport {HandlerType} from \"../interfaces/HandlerType\";\nimport {PlatformRouteOptions, PlatformRouteWithoutHandlers} from \"../interfaces/PlatformRouteOptions\";\nimport {ParamMetadata} from \"../models/ParamMetadata\";\nimport {ParamTypes} from \"./ParamTypes\";\n\nexport interface HandlerMetadataOptions {\n  target: (Type<any> | Function) & {type?: HandlerType};\n  routeOptions?: PlatformRouteWithoutHandlers;\n  token?: Type<any>;\n  propertyKey?: string | symbol;\n  scope?: ProviderScope;\n  type?: HandlerType;\n}\n\nexport class HandlerMetadata {\n  readonly target: any;\n  readonly token: Type<any>;\n  readonly propertyKey: string | symbol;\n  readonly injectable: boolean = false;\n  readonly type: HandlerType = HandlerType.RAW_FN;\n  readonly hasNextFunction: boolean = false;\n  readonly routeOptions: Partial<PlatformRouteOptions>;\n  readonly scope: ProviderScope;\n\n  handler: any;\n\n  constructor(options: HandlerMetadataOptions) {\n    const {target, token, propertyKey, type, scope, routeOptions} = options;\n\n    this.type = type || target.type || HandlerType.RAW_FN;\n    this.scope = scope || ProviderScope.SINGLETON;\n    this.routeOptions = routeOptions || {};\n    const handler = propertyKey ? target.prototype[propertyKey] : target;\n\n    if (propertyKey) {\n      this.target = target;\n      this.token = token!;\n      this.propertyKey = propertyKey;\n      this.hasNextFunction = this.hasParamType(ParamTypes.NEXT_FN);\n\n      if (this.hasParamType(ParamTypes.ERR)) {\n        this.type = HandlerType.ERR_MIDDLEWARE;\n      }\n\n      this.injectable = ParamMetadata.getParams(target as any, propertyKey).length > 0;\n    } else {\n      this.handler = handler;\n    }\n\n    if (!this.injectable) {\n      if (handler.length === 4) {\n        this.type = HandlerType.RAW_ERR_FN;\n      }\n      this.hasNextFunction = handler.length >= 3;\n    }\n  }\n\n  get hasErrorParam() {\n    return this.type === HandlerType.ERR_MIDDLEWARE || this.type === HandlerType.RAW_ERR_FN;\n  }\n\n  get parameters(): ParamMetadata[] {\n    if (this.injectable) {\n      return this.getParams();\n    }\n    // Emulate ParamMetadata\n    const parameters: any[] = [];\n\n    if (this.hasErrorParam) {\n      parameters.push(\n        new ParamMetadata({\n          target: this.target,\n          propertyKey: this.propertyKey,\n          index: 0,\n          paramType: ParamTypes.ERR\n        })\n      );\n    }\n\n    parameters.push(\n      new ParamMetadata({\n        target: this.target,\n        propertyKey: this.propertyKey,\n        index: parameters.length,\n        paramType: ParamTypes.REQUEST\n      })\n    );\n    parameters.push(\n      new ParamMetadata({\n        target: this.target,\n        propertyKey: this.propertyKey,\n        index: parameters.length,\n        paramType: ParamTypes.RESPONSE\n      })\n    );\n\n    if (this.hasNextFunction) {\n      parameters.push(\n        new ParamMetadata({\n          target: this.target,\n          propertyKey: this.propertyKey,\n          index: parameters.length,\n          paramType: ParamTypes.NEXT_FN\n        })\n      );\n    }\n\n    return parameters;\n  }\n\n  public getParams() {\n    return ParamMetadata.getParams(this.target, this.propertyKey) || [];\n  }\n\n  public hasParamType(paramType: any): boolean {\n    return this.getParams().findIndex((p) => p.paramType === paramType) > -1;\n  }\n\n  public isFinal() {\n    return this.routeOptions?.isFinal || false;\n  }\n\n  toString() {\n    return [this.target && nameOf(this.target), this.propertyKey].filter(Boolean).join(\".\");\n  }\n}\n"]}