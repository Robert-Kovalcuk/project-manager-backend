{"version":3,"file":"HandlerContext.js","sourceRoot":"","sources":["../../../src/platform/domain/HandlerContext.ts"],"names":[],"mappings":"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","sourcesContent":["import {isObservable, isPromise, isStream} from \"@tsed/core\";\nimport {ProviderScope} from \"@tsed/di\";\nimport {HandlerMetadata} from \"../../mvc/models/HandlerMetadata\";\nimport {PlatformContext} from \"./PlatformContext\";\n\n/**\n * @ignore\n */\nfunction isResponse(obj: any) {\n  return obj.data && obj.headers && obj.status && obj.statusText;\n}\n\n/**\n * @ignore\n */\nexport interface HandlerContextOptions {\n  $ctx: PlatformContext;\n  metadata: HandlerMetadata;\n  args: any[];\n  err?: any;\n}\n\n/**\n * @ignore\n */\nexport enum HandlerContextStatus {\n  PENDING = \"pending\",\n  CANCELED = \"canceled\",\n  RESOLVED = \"resolved\",\n  REJECTED = \"rejected\"\n}\n\nexport class HandlerContext {\n  public status = HandlerContextStatus.PENDING;\n  public metadata: HandlerMetadata;\n  public $ctx: PlatformContext;\n  public err: any;\n  public args: any[];\n\n  #resolves: any;\n  #rejects: any;\n\n  readonly #promise: Promise<any>;\n\n  constructor({$ctx, err, metadata, args}: HandlerContextOptions) {\n    this.$ctx = $ctx;\n\n    this.#promise = new Promise((resolve: any, reject: any) => {\n      this.#resolves = resolve;\n      this.#rejects = reject;\n    });\n\n    err && (this.err = err);\n    metadata && (this.metadata = metadata);\n    args && (this.args = args || []);\n\n    this.next = this.next.bind(this);\n  }\n\n  get request() {\n    return this.$ctx?.getRequest<TsED.Request>();\n  }\n\n  get response() {\n    return this.$ctx?.getResponse<TsED.Response>();\n  }\n\n  get isDone(): boolean {\n    const {$ctx} = this;\n    if (!$ctx || $ctx.isDone()) {\n      return true;\n    }\n\n    if ($ctx.request.isAborted() || $ctx.response.isDone()) {\n      this.destroy();\n\n      if (this.status === HandlerContextStatus.PENDING) {\n        this.status = HandlerContextStatus.RESOLVED;\n      }\n    }\n\n    return this.status !== HandlerContextStatus.PENDING;\n  }\n\n  private get handler() {\n    const {metadata} = this;\n\n    if (metadata.handler) {\n      return metadata.handler;\n    }\n\n    if (this.metadata.scope === ProviderScope.SINGLETON) {\n      if (!this.$ctx.injector.has(metadata.token)) {\n        this.$ctx.injector.invoke<any>(metadata.token);\n      }\n\n      const instance = this.$ctx.injector.get(metadata.token);\n      metadata.handler = instance[metadata.propertyKey].bind(instance);\n\n      return metadata.handler;\n    }\n\n    const instance = this.$ctx.injector.invoke<any>(metadata.token, this.$ctx.container);\n\n    return instance[metadata.propertyKey].bind(instance);\n  }\n\n  /**\n   *\n   */\n  async callHandler() {\n    if (this.isDone) {\n      return this;\n    }\n\n    try {\n      this.handle(this.handler(...this.args, this.$ctx));\n    } catch (er) {\n      this.reject(er);\n    }\n\n    return this.#promise;\n  }\n\n  reject(er: any) {\n    if (this.isDone) {\n      return;\n    }\n\n    this.destroy();\n    this.status = HandlerContextStatus.REJECTED;\n    this.#rejects(er);\n  }\n\n  resolve(data?: any) {\n    if (this.isDone) {\n      return;\n    }\n\n    if (this.$ctx && data !== undefined) {\n      this.$ctx.data = data;\n    }\n\n    this.destroy();\n    this.status = HandlerContextStatus.RESOLVED;\n\n    this.#resolves(data);\n  }\n\n  next(error?: any) {\n    if (this.isDone) {\n      return;\n    }\n\n    return error ? this.reject(error) : this.resolve();\n  }\n\n  destroy() {\n    // @ts-ignore\n    delete this.$ctx;\n    // @ts-ignore\n    delete this.args;\n    // @ts-ignore\n    delete this.metadata;\n    // @ts-ignore\n    delete this.err;\n  }\n\n  cancel() {\n    if (this.isDone) {\n      return;\n    }\n\n    this.destroy();\n    this.status = HandlerContextStatus.CANCELED;\n\n    return this.#resolves();\n  }\n\n  handle(process: any): any {\n    if (this.isDone) {\n      return;\n    }\n\n    const {\n      metadata: {hasNextFunction},\n      $ctx\n    } = this;\n\n    if (process) {\n      if (process === $ctx.getResponse()) {\n        // ABANDON\n        return this.cancel();\n      }\n\n      if (isObservable(process)) {\n        process = process.toPromise();\n      }\n\n      if (isResponse(process)) {\n        $ctx.response.setHeaders(process.headers);\n        $ctx.response.status(process.status);\n\n        return this.handle(process.data);\n      }\n\n      if (isStream(process) || Buffer.isBuffer(process)) {\n        return this.resolve(process);\n      }\n\n      if (isPromise(process)) {\n        return process\n          .then((result: any) => this.handle(result))\n          .catch((error: any) => {\n            if (error.response && isResponse(error.response)) {\n              return this.handle(error.response);\n            }\n            return this.reject(error);\n          });\n      }\n    }\n\n    if (!hasNextFunction) {\n      // no next function and empty response\n      return this.resolve(process);\n    }\n  }\n}\n"]}