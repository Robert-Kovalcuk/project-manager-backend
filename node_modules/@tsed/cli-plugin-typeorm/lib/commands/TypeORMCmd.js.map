{"version":3,"file":"TypeORMCmd.js","sourceRoot":"","sources":["../../src/commands/TypeORMCmd.ts"],"names":[],"mappings":";;;;AAAA,6CAAmF;AACnF,uDAAkD;AAmBlD,IAAa,UAAU,GAAvB,MAAa,UAAU;IAIrB,KAAK,CAAC,KAAK,CAAC,GAAmB;QAC7B,OAAO;YACL;gBACE,KAAK,EAAE,mBAAmB,GAAG,CAAC,OAAO,EAAE;gBACvC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;aAC1D;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AAVC;IADC,iBAAM,EAAE;sCACG,uBAAU;8CAAC;AAFZ,UAAU;IAbtB,kBAAO,CAAC;QACP,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,uBAAuB;QACpC,IAAI,EAAE;YACJ,OAAO,EAAE;gBACP,WAAW,EAAE,qBAAqB;gBAClC,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,IAAI;aACf;SACF;QACD,OAAO,EAAE,EAAE;QACX,kBAAkB,EAAE,IAAI;KACzB,CAAC;GACW,UAAU,CAYtB;AAZY,gCAAU","sourcesContent":["import {Command, CliDefaultOptions, CommandProvider, Inject} from \"@tsed/cli-core\";\nimport {CliTypeORM} from \"../services/CliTypeORM\";\n\nexport interface TypeORMContext extends CliDefaultOptions {\n  command: string;\n}\n\n@Command({\n  name: \"typeorm\",\n  description: \"Run a typeorm command\",\n  args: {\n    command: {\n      description: \"The typeorm command\",\n      type: String,\n      required: true\n    }\n  },\n  options: {},\n  allowUnknownOption: true\n})\nexport class TypeORMCmd implements CommandProvider {\n  @Inject()\n  cliTypeORM: CliTypeORM;\n\n  async $exec(ctx: TypeORMContext) {\n    return [\n      {\n        title: `Run TypeORM CLI ${ctx.command}`,\n        task: () => this.cliTypeORM.run(ctx.command, ctx.rawArgs)\n      }\n    ];\n  }\n}\n"]}