{"version":3,"file":"AjvService.js","sourceRoot":"","sources":["../../src/services/AjvService.ts"],"names":[],"mappings":"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","sourcesContent":["import {deepClone, getValue, nameOf, prototypeOf, setValue, Type} from \"@tsed/core\";\nimport {Constant, Inject, Injectable} from \"@tsed/di\";\nimport {getJsonSchema, JsonEntityStore, JsonSchema, JsonSchemaObject} from \"@tsed/schema\";\nimport Ajv, {ErrorObject} from \"ajv\";\nimport {AjvValidationError} from \"../errors/AjvValidationError\";\nimport {AjvErrorObject, ErrorFormatter} from \"../interfaces/IAjvSettings\";\nimport {defaultErrorFormatter} from \"../utils/defaultErrorFormatter\";\nimport \"./Ajv\";\nimport {getPath} from \"../utils/getPath\";\n\nexport interface AjvValidateOptions extends Record<string, any> {\n  schema?: JsonSchema | Partial<JsonSchemaObject>;\n  type?: Type<any> | any;\n  collectionType?: Type<any> | any;\n}\n\n@Injectable()\nexport class AjvService {\n  @Constant(\"ajv.errorFormatter\", defaultErrorFormatter)\n  protected errorFormatter: ErrorFormatter;\n\n  @Inject()\n  protected ajv: Ajv;\n\n  async validate(value: any, options: AjvValidateOptions | JsonSchema): Promise<any> {\n    let {schema, type, collectionType, ...additionalOptions} = this.mapOptions(options);\n\n    schema = schema || getJsonSchema(type, {...additionalOptions, customKeys: true});\n\n    if (schema) {\n      const localValue = deepClone(value);\n      const valid = await this.ajv.validate(schema as any, localValue);\n      if (!valid) {\n        throw this.mapErrors(this.ajv.errors || [], {\n          type,\n          collectionType,\n          async: true,\n          value: localValue\n        });\n      }\n    }\n\n    return value;\n  }\n\n  protected mapOptions(options: AjvValidateOptions | JsonSchema): AjvValidateOptions {\n    if (options instanceof JsonSchema) {\n      return {\n        schema: options.toJSON({customKeys: true})\n      };\n    }\n\n    return options;\n  }\n\n  protected mapErrors(errors: ErrorObject[], options: any) {\n    const {type, collectionType, value} = options;\n\n    const message = errors\n      .map((error: AjvErrorObject) => {\n        if (collectionType) {\n          error.collectionName = nameOf(collectionType);\n        }\n\n        const dataPath = getPath(error);\n\n        if (!error.data) {\n          if (dataPath) {\n            error.data = getValue(value, dataPath);\n          } else if (error.schemaPath !== \"#/required\") {\n            error.data = value;\n          }\n        }\n\n        if (dataPath && dataPath.match(/pwd|password|mdp|secret/)) {\n          error.data = \"[REDACTED]\";\n        }\n\n        if (type) {\n          error.modelName = nameOf(type);\n          error.message = this.mapClassError(error, type);\n        }\n\n        return this.errorFormatter.call(this, error, {});\n      })\n      .join(\"\\n\");\n\n    return new AjvValidationError(message, errors);\n  }\n\n  protected mapClassError(error: AjvErrorObject, targetType: Type<any>) {\n    const propertyKey = getValue(error, \"params.missingProperty\");\n\n    if (propertyKey) {\n      const store = JsonEntityStore.from<JsonEntityStore>(prototypeOf(targetType), propertyKey);\n\n      if (store) {\n        setValue(error, \"params.missingProperty\", store.name || propertyKey);\n\n        return error.message!.replace(`'${propertyKey}'`, `'${store.name || propertyKey}'`);\n      }\n    }\n\n    return error.message;\n  }\n}\n"]}