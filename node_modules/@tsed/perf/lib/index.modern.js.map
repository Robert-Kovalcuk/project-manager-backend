{"version":3,"file":"index.modern.js","sources":["../src/utils/utils.ts","../src/domain/Perf.ts","../src/domain/PerfLogger.ts"],"sourcesContent":["export function now() {\n  return process.hrtime.bigint();\n}\n\nexport function toMs(time: bigint) {\n  return Math.round(Number(time) / 1000) / 1000;\n}\n\nexport function fromNow(time: bigint) {\n  return toMs(now() - time);\n}\n","import {isPromise} from \"@tsed/core\";\nimport {fromNow, now} from \"../utils/utils\";\n\nexport type CallbackWrapper<T = any> = (...args: any[]) => T;\n\n// istanbul ignore next\nexport class Perf {\n  #latest: bigint;\n  #start: bigint;\n\n  constructor() {\n    this.start = this.start.bind(this);\n    this.end = this.end.bind(this);\n    this.run = this.run.bind(this);\n    this.fromStart = this.fromStart.bind(this);\n    this.fromLatest = this.fromLatest.bind(this);\n  }\n\n  start() {\n    this.#start = this.#latest = now();\n\n    return this;\n  }\n\n  run<T = any>(fn: CallbackWrapper<T>): {result: T; time: number} | Promise<{result: T; time: number}>;\n  run<T = any>(fn: CallbackWrapper<T>, onTime: (time: number) => void): T;\n  run<T = any>(fn: CallbackWrapper<T>, onTime?: (time: number) => void) {\n    const date = now();\n\n    const result = fn();\n\n    const getDiff = (result: any) => {\n      const diff = fromNow(date);\n      this.#latest = now();\n\n      onTime && onTime(diff);\n\n      return onTime ? result : {result, time: diff};\n    };\n\n    if (isPromise(result)) {\n      return result.then(getDiff);\n    }\n\n    return getDiff(result);\n  }\n\n  fromStart() {\n    return fromNow(this.#start);\n  }\n\n  fromLatest() {\n    const diff = fromNow(this.#latest);\n    this.#latest = now();\n    return diff;\n  }\n\n  end() {\n    const diff = fromNow(this.#start);\n    this.#start = this.#latest = now();\n    return diff;\n  }\n}\n","import {classOf, descriptorOf, methodsOf, nameOf} from \"@tsed/core\";\nimport chalk from \"chalk\";\nimport {CallbackWrapper, Perf} from \"./Perf\";\n\nconst loggers = new Map();\n\nexport type LEVELS = Record<number, \"black\" | \"red\" | \"green\" | \"yellow\" | \"blue\" | \"magenta\" | \"cyan\" | \"white\" | \"gray\">;\n\n// istanbul ignore next\nexport class PerfLogger {\n  #perf = new Perf();\n  #enabled: boolean = false;\n\n  constructor(readonly label: string = \"perf\", readonly levels: LEVELS = {10: \"green\", 50: \"yellow\", 100: \"red\"}) {\n    this.wrap = this.wrap.bind(this);\n    this.log = this.log.bind(this);\n    this.start = this.start.bind(this);\n    this.end = this.end.bind(this);\n    this.bind = this.bind.bind(this);\n  }\n\n  static get(label: string) {\n    if (loggers.get(label)) {\n      return loggers.get(label);\n    }\n\n    const logger = loggers.get(label) || new PerfLogger(label);\n\n    loggers.set(label, logger);\n\n    return logger;\n  }\n\n  start() {\n    this.#enabled = true;\n    this.#perf.start();\n\n    return this;\n  }\n\n  log(...args: any[]) {\n    if (this.#enabled) {\n      console.debug(this.formatLog([\"LOG   -\", ...args], this.#perf.fromLatest(), \"from latest: \"));\n    }\n\n    return this;\n  }\n\n  bind(instance: any) {\n    const methods = methodsOf(classOf(instance));\n    const {wrap, log} = this;\n\n    methods.forEach(({target, propertyKey}) => {\n      const descriptor = descriptorOf(target, propertyKey);\n      const name = nameOf(target);\n\n      if (descriptor.value) {\n        const fn = instance[propertyKey].bind(instance);\n        if (propertyKey === \"log\") {\n          instance[propertyKey] = (...args: any[]) => {\n            log(...args);\n            return fn(...args);\n          };\n        } else {\n          instance[propertyKey] = (...args: any[]) => {\n            return wrap(() => fn(...args), `${name}.${propertyKey}()`);\n          };\n        }\n      }\n    });\n\n    return instance;\n  }\n\n  wrap<T = any>(fn: CallbackWrapper<T>, name = nameOf(fn)): T {\n    if (!this.#enabled) {\n      return fn();\n    }\n\n    console.debug(this.formatLog([`START - ${name}`], this.#perf.fromLatest(), \"from latest: \"));\n\n    return this.#perf.run(fn, (time) => {\n      if (this.#enabled) {\n        console.debug(this.formatLog([`END   - ${name}`], time, \"method: \"));\n      }\n    });\n  }\n\n  end() {\n    if (this.#enabled) {\n      console.debug(this.formatLog([\"ending\"], this.#perf.end(), \"from start: \"));\n      this.#enabled = false;\n    }\n\n    return this;\n  }\n\n  private formatLog(log: any[], diff: number, wrap = \"\") {\n    const dataLog = log.join(\" \") + \"                                                                                    \";\n    const diffLabel = this.formatDiff(diff, wrap);\n    const fromStart = this.#perf.fromStart();\n    const globalDiff = (\"     \" + fromStart.toFixed(3) + \"ms\").slice(-10);\n\n    return `[${this.label}] ${globalDiff} - ${String(dataLog)}`.slice(0, 80) + ` ${diffLabel}`;\n  }\n\n  private formatDiff(diff: number, prefix = \"\") {\n    const label = `(${prefix}+${diff}ms)`;\n    const list = Object.entries(this.levels);\n\n    const [, color] = list.find(([level]) => diff <= +level) || list[list.length - 1];\n\n    return (chalk as any)[color](label);\n  }\n}\n"],"names":["now","process","hrtime","bigint","toMs","time","Math","round","Number","fromNow","Perf","constructor","start","bind","end","run","fromStart","fromLatest","fn","onTime","date","result","getDiff","diff","isPromise","then","loggers","Map","PerfLogger","label","levels","wrap","log","get","logger","set","args","console","debug","formatLog","instance","methods","methodsOf","classOf","forEach","target","propertyKey","descriptor","descriptorOf","name","nameOf","value","dataLog","join","diffLabel","formatDiff","globalDiff","toFixed","slice","String","prefix","list","Object","entries","color","find","level","length","chalk"],"mappings":"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"}